// models/Issue.js

const mongoose = require('mongoose');

const issueSchema = new mongoose.Schema({
    d1: {
        root_cause_champion: { type: String, required: false },
        hod_responsible: { type: String, required: false },
        support_role: { type: String, required: false },
        issue_creator: { type: String, required: false },
        car_system_tracker: { type: String, required: false },
    },
    d2: {
        vehicle_model: { type: String },
        process: { type: String },
        function_group: { type: String },
        part_name: { type: String },
        part_number: { type: String },
        defect: { type: String },
        green_y: { type: String },
        problem_seen_date: { type: Date },
        product_life_cycle: { type: String },
        in_vehicle: { type: String },
        side_of_vehicle: { type: String },
        additional_where: { type: String },
    },
    d3: {
        recall_parts_notes: { type: String },
        shipping_department_notes: { type: String },
        isolate_parts: { type: String },
        final_inspection_notes: { type: String },
        quarantine_notes: { type: String },
        sort_notes: { type: String },
        parts_sorted_qty: { type: Number },
        parts_date_of_check: { type: Date },
        ok_parts_qty: { type: Number },
        ng_parts_qty: { type: Number },
        parts_note: { type: String },
        vehicles_sorted_qty: { type: Number },
        date_begin_sort: { type: Date },
        date_end_sort: { type: Date },
        ok_body_numbers: { type: Number },
        ng_body_numbers: { type: Number },
        vehicles_note: { type: String },
        sort_yard_sweep_files: [
            {
                filename: { type: String },
                originalname: { type: String },
            },
        ],
        results: { type: String },
        pdr_needed: { type: String },
        pdr_number: { type: String },
    },
    d4: {
        fishbone_analysis: {
            people: [{ type: String }],
            material: [{ type: String }],
            method: [{ type: String }],
            machine: [{ type: String }],
        },
        why1: { type: String },
        why2: { type: String },
        why3: { type: String },
        why4: { type: String },
        why5: { type: String },
        bob_vs_wow: { type: String },
        correct_process_followed: { type: String },
        correct_process_followed_info: { type: String },
        correct_tool_used: { type: String },
        correct_tool_used_info: { type: String },
        correct_part_number_used: { type: String },
        correct_part_number_used_info: { type: String },
        kepner_tregoe: {
            eo_changes: { type: String },
            pdr_changes: { type: String },
            four_m_changes: { type: String },
            software_changes: { type: String },
            trend: { type: String },
            extent: { type: String },
        },
    },
    d5: {
        customer: { type: String },
        clues_in_data: { type: String },
        control_factors_influence: { type: String },
        other_control_factors: { type: String },
        noise_factors: { type: String },
        files: { type: Object },
        corrective_action: { type: String },
        second_corrective_action: { type: String },
        third_corrective_action: { type: String },
    },
    d6: {
        trial_description: { type: String },
        fttq_effect: { type: String },
        dealer_claims_effect: { type: String },
        other_kpis: { type: String },
        corrective_action_issues: { type: String },
        control_plans: { type: Object },
        fmeas: { type: Object },
        poka_yoke: { type: String },
        production_instructions_needed: { type: String },
        production_instructions_number: { type: String },
        production_instructions_trial_date: { type: Date },
    },
    d7: {
        documents_update: { type: String },
        dfmea: { type: Object },
        pfmea: { type: Object },
        swis: { type: Object },
        preventive_actions: { type: String },
    },
    d8: {
        read_across: { type: String },
        other_vehicles_affected: [{ type: String }],
        previous_amps: { type: Object },
        previous_line_call_sheets: { type: Object },
    },
    status: { type: String, default: 'Open' },
    carNumber: { type: String },
    createdAt: { type: Date, default: Date.now }
});

module.exports = mongoose.model('Issue', issueSchema);
